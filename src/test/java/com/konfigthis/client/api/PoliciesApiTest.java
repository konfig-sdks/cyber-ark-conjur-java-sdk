/*
 * Conjur
 * This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.3.1
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PoliciesModifyPolicyResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PoliciesApi
 */
@Disabled
public class PoliciesApiTest {

    private static PoliciesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PoliciesApi(apiClient);
    }

    /**
     * Adds data to the existing Conjur policy.
     *
     * Adds data to the existing Conjur policy. Deletions are not allowed. Any policy objects that exist on the server but are omitted from the policy file will not be deleted and any explicit deletions in the policy file will result in an error.  ##### Permissions required  &#x60;create&#x60; privilege on the policy.\&quot; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addDataToExistingPolicyTest() throws ApiException {
        String account = null;
        String identifier = null;
        String xRequestId = null;
        api.addDataToExistingPolicy(account, identifier)
                .xRequestId(xRequestId)
                .execute();
        // TODO: test validations
    }

    /**
     * Modifies an existing Conjur policy.
     *
     * Modifies an existing Conjur policy. Data may be explicitly deleted using the &#x60;!delete&#x60;, &#x60;!revoke&#x60;, and &#x60;!deny&#x60; statements. Unlike &#x60;replace&#x60; mode, no data is ever implicitly deleted.  ##### Permissions required 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modifyPolicyTest() throws ApiException {
        String account = null;
        String identifier = null;
        String xRequestId = null;
        api.modifyPolicy(account, identifier)
                .xRequestId(xRequestId)
                .execute();
        // TODO: test validations
    }

    /**
     * Loads or replaces a Conjur policy document.
     *
     * Loads or replaces a Conjur policy document.  **Any policy data which already exists on the server but is not explicitly specified in the new policy file will be deleted!**. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putPolicyDocumentTest() throws ApiException {
        String account = null;
        String identifier = null;
        String xRequestId = null;
        PoliciesModifyPolicyResponse response = api.putPolicyDocument(account, identifier)
                .xRequestId(xRequestId)
                .execute();
        // TODO: test validations
    }

}
