/*
 * Conjur
 * This is an API definition for CyberArk Conjur Open Source. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.3.1
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SecretsApi
 */
@Disabled
public class SecretsApiTest {

    private static SecretsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SecretsApi(apiClient);
    }

    /**
     * Creates a secret value within the specified variable.
     *
     * Creates a secret value within the specified Secret.   Note: Conjur will allow you to add a secret to any resource, but the best practice is to store and retrieve secret data only using Secret resources. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSecretValueTest() throws ApiException {
        String account = null;
        String kind = null;
        String identifier = null;
        String xRequestId = null;
        String expirations = null;
        api.createSecretValue(account, kind, identifier)
                .xRequestId(xRequestId)
                .expirations(expirations)
                .execute();
        // TODO: test validations
    }

    /**
     * Fetch multiple secrets
     *
     * Fetches multiple secret values in one invocation. Itâ€™s faster to fetch secrets in batches than to fetch them one at a time.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMultipleValuesTest() throws ApiException {
        String variableIds = null;
        String xRequestId = null;
        String acceptEncoding = null;
        Object response = api.getMultipleValues(variableIds)
                .xRequestId(xRequestId)
                .acceptEncoding(acceptEncoding)
                .execute();
        // TODO: test validations
    }

    /**
     * Fetches the value of a secret from the specified Secret.
     *
     * Fetches the value of a secret from the specified Secret. The latest version will be retrieved unless the version parameter is specified. The twenty most recent secret versions are retained.  The secret data is returned in the response body.  Note: Conjur will allow you to add a secret to any resource, but the best practice is to store and retrieve secret data only using Secret resources. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSecretValueTest() throws ApiException {
        String account = null;
        String kind = null;
        String identifier = null;
        String xRequestId = null;
        Integer version = null;
        String response = api.getSecretValue(account, kind, identifier)
                .xRequestId(xRequestId)
                .version(version)
                .execute();
        // TODO: test validations
    }

}
